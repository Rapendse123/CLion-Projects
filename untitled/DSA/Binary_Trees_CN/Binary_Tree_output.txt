/*
OUTPUT:
ENTER YOUR CHOICE FOR INPUT:
ENTER:
1 TO TAKE LEVEL WISE INPUT
2 TO CONSTRUCT TREE FROM GIVEN INORDER AND POSTORDER TRAVERSAL
3 TO PROCEED FOR FURTHER FUNCTIONS
1
[TAKING INPUT NODES OF BINARY TREE LEVEL WISE]
Enter root data:
1
Enter left child of |1|:
[TO ASSIGN LEFT CHILD AS NULL ENTER INPUT AS -1]
2
Enter right child of |1|:
[TO ASSIGN RIGHT CHILD AS NULL ENTER INPUT AS -1]
3

Enter left child of |2|:
[TO ASSIGN LEFT CHILD AS NULL ENTER INPUT AS -1]
4
Enter right child of |2|:
[TO ASSIGN RIGHT CHILD AS NULL ENTER INPUT AS -1]
5

Enter left child of |3|:
[TO ASSIGN LEFT CHILD AS NULL ENTER INPUT AS -1]
6
Enter right child of |3|:
[TO ASSIGN RIGHT CHILD AS NULL ENTER INPUT AS -1]
7

Enter left child of |4|:
[TO ASSIGN LEFT CHILD AS NULL ENTER INPUT AS -1]
8
Enter right child of |4|:
[TO ASSIGN RIGHT CHILD AS NULL ENTER INPUT AS -1]
9

Enter left child of |5|:
[TO ASSIGN LEFT CHILD AS NULL ENTER INPUT AS -1]
-1
Enter right child of |5|:
[TO ASSIGN RIGHT CHILD AS NULL ENTER INPUT AS -1]
10

Enter left child of |6|:
[TO ASSIGN LEFT CHILD AS NULL ENTER INPUT AS -1]
-1
Enter right child of |6|:
[TO ASSIGN RIGHT CHILD AS NULL ENTER INPUT AS -1]
-1

Enter left child of |7|:
[TO ASSIGN LEFT CHILD AS NULL ENTER INPUT AS -1]
11
Enter right child of |7|:
[TO ASSIGN RIGHT CHILD AS NULL ENTER INPUT AS -1]
-1

Enter left child of |8|:
[TO ASSIGN LEFT CHILD AS NULL ENTER INPUT AS -1]
-1
Enter right child of |8|:
[TO ASSIGN RIGHT CHILD AS NULL ENTER INPUT AS -1]
-1

Enter left child of |9|:
[TO ASSIGN LEFT CHILD AS NULL ENTER INPUT AS -1]
-1
Enter right child of |9|:
[TO ASSIGN RIGHT CHILD AS NULL ENTER INPUT AS -1]
-1

Enter left child of |10|:
[TO ASSIGN LEFT CHILD AS NULL ENTER INPUT AS -1]
-1
Enter right child of |10|:
[TO ASSIGN RIGHT CHILD AS NULL ENTER INPUT AS -1]
-1

Enter left child of |11|:
[TO ASSIGN LEFT CHILD AS NULL ENTER INPUT AS -1]
-1
Enter right child of |11|:
[TO ASSIGN RIGHT CHILD AS NULL ENTER INPUT AS -1]
-1


ENTER YOUR CHOICE FOR INPUT:
ENTER:
1 TO TAKE LEVEL WISE INPUT
2 TO CONSTRUCT TREE FROM GIVEN INORDER AND POSTORDER TRAVERSAL
3 TO PROCEED FOR FURTHER FUNCTIONS
3
PROCEEDING FURTHER...
********************MENU********************
1. To print binary tree level wise
2. To print no of nodes in tree
3. [INORDER TRAVERSAL]...
4. [PREORDER TRAVERSAL]...
5. [POSTORDER TRAVERSAL]...
6. [TO PRINT HEIGHT AND DIAMETER OF BINARY TREE]...
7. [WARNING] To delete tree
8. TO EXIT
********************************************

Enter Your choice:
1

[PRINTING BINARY TREE LEVEL WISE...]
1: L2 R3
2: L4 R5
3: L6 R7
4: L8 R9
5: R10
6:
7: L11
8:
9:
10:
11:

********************MENU********************
1. To print binary tree level wise
2. To print no of nodes in tree
3. [INORDER TRAVERSAL]...
4. [PREORDER TRAVERSAL]...
5. [POSTORDER TRAVERSAL]...
6. [TO PRINT HEIGHT AND DIAMETER OF BINARY TREE]...
7. [WARNING] To delete tree
8. TO EXIT
********************************************

Enter Your choice:
2

[COUNTING NO OF NODES IN BINARY TREE...]
COUNT=11

********************MENU********************
1. To print binary tree level wise
2. To print no of nodes in tree
3. [INORDER TRAVERSAL]...
4. [PREORDER TRAVERSAL]...
5. [POSTORDER TRAVERSAL]...
6. [TO PRINT HEIGHT AND DIAMETER OF BINARY TREE]...
7. [WARNING] To delete tree
8. TO EXIT
********************************************

Enter Your choice:
3

[INORDER TRAVERSAL...]
8 4 9 2 5 10 1 6 3 11 7

********************MENU********************
1. To print binary tree level wise
2. To print no of nodes in tree
3. [INORDER TRAVERSAL]...
4. [PREORDER TRAVERSAL]...
5. [POSTORDER TRAVERSAL]...
6. [TO PRINT HEIGHT AND DIAMETER OF BINARY TREE]...
7. [WARNING] To delete tree
8. TO EXIT
********************************************

Enter Your choice:
4

[PREORDER TRAVERSAL...]
1 2 4 8 9 5 10 3 6 7 11

********************MENU********************
1. To print binary tree level wise
2. To print no of nodes in tree
3. [INORDER TRAVERSAL]...
4. [PREORDER TRAVERSAL]...
5. [POSTORDER TRAVERSAL]...
6. [TO PRINT HEIGHT AND DIAMETER OF BINARY TREE]...
7. [WARNING] To delete tree
8. TO EXIT
********************************************

Enter Your choice:
5

[POSTORDER TRAVERSAL...]
8 9 4 10 5 2 6 11 7 3 1

********************MENU********************
1. To print binary tree level wise
2. To print no of nodes in tree
3. [INORDER TRAVERSAL]...
4. [PREORDER TRAVERSAL]...
5. [POSTORDER TRAVERSAL]...
6. [TO PRINT HEIGHT AND DIAMETER OF BINARY TREE]...
7. [WARNING] To delete tree
8. TO EXIT
********************************************

Enter Your choice:
6

[HEIGHT OF BINARY TREE IS]...
Height=4

[DIAMETER OF BINARY TREE IS]...
Diameter=6

********************MENU********************
1. To print binary tree level wise
2. To print no of nodes in tree
3. [INORDER TRAVERSAL]...
4. [PREORDER TRAVERSAL]...
5. [POSTORDER TRAVERSAL]...
6. [TO PRINT HEIGHT AND DIAMETER OF BINARY TREE]...
7. [WARNING] To delete tree
8. TO EXIT
********************************************

Enter Your choice:
7

[DELETING BINARY TREE LEVEL WISE USING DESTRUCTOR...]
********************MENU********************
1. To print binary tree level wise
2. To print no of nodes in tree
3. [INORDER TRAVERSAL]...
4. [PREORDER TRAVERSAL]...
5. [POSTORDER TRAVERSAL]...
6. [TO PRINT HEIGHT AND DIAMETER OF BINARY TREE]...
7. [WARNING] To delete tree
8. TO EXIT
********************************************

Enter Your choice:
8

[EXITING]...

Process finished with exit code 0
 */





// SAMPLE INPUT : 1 2 3 4 5 6 7 -1 -1 -1 -1 8 9 -1 -1 -1 -1 -1 -1