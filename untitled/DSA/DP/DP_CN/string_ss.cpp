///*
//PROBLEM STATEMENT:
//Given two strings S1 and S2,
//find the number of times the second string occurs in the first string,
//whether continuous or discontinuous.
//*/
//
//#include <bits/stdc++.h>
//
//#define int long long
//using namespace std;
//
//void printArray(int **dp, int m, int n) {
//    for (int i = 0; i < m + 1; ++i) {
//        for (int j = 0; j < n + 1; ++j) {
//            cout << dp[i][j] << " ";
//        }
//        cout << '\n';
//    }
//    cout << '\n';
//}
//
//int solve(string s1, string s2) {
//    int m = s1.length();
//    int n = s2.length();
////    int dp[m + 1][n + 1];
//    int **dp = new int *[m + 1];
//    for (int i = 0; i < m + 1; i++) {
//        dp[i] = new int[n + 1];
//    }
//
//    // INITIALIZATION
//    for (int i = 0; i < n + 1; i++) {
//        dp[0][i] = 0;
//    }
//
//    for (int i = 0; i < m + 1; i++) {
//        dp[i][0] = 1;
//    }
//
//    cout << "\n\nDP ARRAY BEFORE ITERATION...\n";
//    printArray(dp, m, n);
//
//    for (int i = 1; i < m + 1; i++) {
//        for (int j = 1; j < n + 1; j++) {
//            if (s1[i - 1] == s2[j - 1]) {
//                dp[i][j] = dp[i - 1][j - 1] + dp[i - 1][j];
//            } else {
//                dp[i][j] = dp[i - 1][j];
//            }
//        }
//    }
//
//    cout << "\n\nDP ARRAY AFTER ITERATION...\n";
//    printArray(dp, m, n);
//
//    return dp[m][n];
//}
//
//int32_t main() {
//    cin.tie(nullptr);
//    cout.tie(nullptr);
//    ios_base::sync_with_stdio(false);
//
//    int t;
//    cin >> t;
//    string s1, s2;
//    while (t--) {
//        cin >> s1 >> s2;
//        cout << solve(s1, s2) << '\n';
//    }
//
//    return 0;
//}
//
///*
//INPUT:
//
//4
//geeksforgeeks gks
//subsequence sue
//mmn nnm
//mine mine
//
//OUTPUT:
//
//4
//geeksforgeeks gks
//subsequence sue
//mmn nnm
//mine mine
//
//DP ARRAY BEFORE ITERATION...
//1 0 0 0
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//
//
//
//DP ARRAY AFTER ITERATION...
//1 0 0 0
//1 1 0 0
//1 1 0 0
//1 1 0 0
//1 1 1 0
//1 1 1 1
//1 1 1 1
//1 1 1 1
//1 1 1 1
//1 2 1 1
//1 2 1 1
//1 2 1 1
//1 2 3 1
//1 2 3 4
//
//4
//
//
//DP ARRAY BEFORE ITERATION...
//1 0 0 0
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//
//
//
//DP ARRAY AFTER ITERATION...
//1 0 0 0
//1 1 0 0
//1 1 1 0
//1 1 1 0
//1 2 1 0
//1 2 1 1
//1 2 1 1
//1 2 3 1
//1 2 3 4
//1 2 3 4
//1 2 3 4
//1 2 3 7
//
//7
//
//
//DP ARRAY BEFORE ITERATION...
//1 0 0 0
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587
//
//
//
//DP ARRAY AFTER ITERATION...
//1 0 0 0
//1 0 0 0
//1 0 0 0
//1 1 0 0
//
//0
//
//
//DP ARRAY BEFORE ITERATION...
//1 0 0 0 0
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587 -4995072469926809587
//1 -4995072469926809587 -4995072469926809587 -4995072469926809587 -4995072469926809587
//
//
//
//DP ARRAY AFTER ITERATION...
//1 0 0 0 0
//1 1 0 0 0
//1 1 1 0 0
//1 1 1 1 0
//1 1 1 1 1
//
//1
//*/